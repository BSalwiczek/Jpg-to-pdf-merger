{"version":3,"sources":["Uploader.js","file.worker.js","Merger.js","Photo.js","PhotosDisplay.js","Sorter.js","App.js","reportWebVitals.js","index.js"],"names":["Uploader","setPhotos","fileInput","createRef","type","style","display","multiple","ref","onChange","e","uploaded","Array","from","target","files","map","el","id","cuid","photo","name","lastModified","photos","submitPhotos","Button","onClick","current","click","Worker_fn","Worker","Merger","mergeClick","setProgress","a","worker","postMessage","addEventListener","event","data","link","document","createElement","href","download","body","append","remove","setTimeout","URL","revokeObjectURL","MAX_WIDTH","MAX_HEIGHT","Photo","index","moveImage","imageRef","useRef","imageContRef","useEffect","img","Image","objectUrl","createObjectURL","onload","src","canvas","width","height","console","log","resize_factor","ctx","getContext","drawImage","toDataURL","resizeImage","prev","undefined","useDrop","accept","hover","item","dragIndex","hoverIndex","drop","useDrag","collect","monitor","isDragging","drag","opacity","className","variant","color","filter","PhotosDisplay","draggedImage","update","$splice","Sorter","useState","sorting","setSorting","InputLabel","Select","labelId","value","new_sorting","sort","b","localeCompare","MenuItem","HTML5Backend","require","DndProvider","App","progress","progressBar","LinearProgress","backend","ButtonGroup","aria-label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d19ba964.chunk.js","sourcesContent":["import React, { createRef } from \"react\";\nimport cuid from \"cuid\";\nimport { Button } from \"@material-ui/core\";\n\nexport default function Uploader({ setPhotos }) {\n  const fileInput = createRef();\n\n  function triggerInput() {\n    fileInput.current.click();\n  }\n\n  function submitPhotos(e) {\n    // console.log(e.target.files);\n\n    const uploaded = Array.from(e.target.files).map((el) => {\n      return {\n        id: cuid(),\n        photo: el,\n        name: el.name,\n        lastModified: el.lastModified,\n      };\n    });\n    setPhotos((photos) => [...photos, ...uploaded]);\n  }\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        style={{\n          display: \"none\",\n        }}\n        multiple\n        ref={fileInput}\n        onChange={(e) => submitPhotos(e)}\n      ></input>\n      <Button onClick={() => triggerInput()}>Upload</Button>\n    </>\n  );\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/file.worker.40bbbbcd.worker.js\");\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useWorker } from \"@koale/useworker\";\nimport Worker from \"worker-loader!./file.worker.js\";\n\nexport default function Merger({ photos, setProgress }) {\n  // function merge() {\n  //   return new Promise((resolve, reject) => {\n  //     let doc = null;\n  //     photos.forEach((el, i) => {\n  //       let img = new Image();\n  //       img.src = el.src;\n  //       const ratio = img.width / img.height;\n  //       console.log(ratio);\n  //       if (ratio < 1) {\n  //         if (i == 0) {\n  //           doc = new jsPDF(\"p\", \"mm\", [img.width, img.height]);\n  //         } else {\n  //           doc.addPage([img.width, img.height], \"p\");\n  //         }\n  //       } else {\n  //         if (i == 0) {\n  //           doc = new jsPDF(\"l\", \"mm\", [img.width, img.height]);\n  //         } else {\n  //           doc.addPage([img.width, img.height], \"l\");\n  //         }\n  //       }\n  //       doc.addImage(img, \"JPEG\", 0, 0, img.width, img.height);\n  //       // setProgress((i + 1) / photos.length);\n  //     });\n  //     doc.save(\"x.pdf\");\n  //   });\n  // }\n  // const [mergeWorker] = useWorker(merge);\n  const mergeClick = async () => {\n    // alert(\"sad\");\n    const worker = new Worker();\n    worker.postMessage({ photos });\n    worker.addEventListener(\"message\", function (event) {\n      if (event.data.name == \"data\") {\n        const link = document.createElement(\"a\");\n        // create a blobURI pointing to our Blob\n        link.href = event.data.data;\n        link.download = \"x.pdf\";\n        // some browser needs the anchor to be in the doc\n        document.body.append(link);\n        link.click();\n        link.remove();\n        // in case the Blob uses a lot of memory\n        setTimeout(() => URL.revokeObjectURL(link.href), 7000);\n      }\n    });\n  };\n  return <Button onClick={mergeClick}>Merge</Button>;\n}\n","import { Button } from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { useEffect, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\nconst MAX_WIDTH = 1920;\nconst MAX_HEIGHT = 1080;\n\nconst resizeImage = (img) => {\n  let canvas = document.createElement(\"canvas\");\n\n  let width = img.width;\n  let height = img.height;\n\n  console.log(width);\n  console.log(height);\n\n  if (width > MAX_WIDTH) {\n    let resize_factor = MAX_WIDTH / width;\n    width = MAX_WIDTH;\n    height = height * resize_factor;\n  }\n  if (height > MAX_HEIGHT) {\n    let resize_factor = MAX_HEIGHT / height;\n    height = MAX_HEIGHT;\n    width = width * resize_factor;\n  }\n  canvas.width = width;\n  canvas.height = height;\n\n  let ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0, width, height);\n\n  return ctx.canvas.toDataURL(img, \"image/jpeg\", 0);\n};\n\nexport default function Photo({ photo, setPhotos, index, moveImage }) {\n  const imageRef = useRef(null);\n  const imageContRef = useRef(null);\n\n  useEffect(() => {\n    // imageRef.current.src = \"\";\n\n    let img = new Image();\n    let objectUrl = URL.createObjectURL(photo.photo);\n\n    img.onload = () => {\n      let src = resizeImage(img);\n      imageRef.current.src = src;\n\n      URL.revokeObjectURL(objectUrl);\n\n      setPhotos((prev) => {\n        return [...prev].map((el) => {\n          if (el.id == photo.id) {\n            return { ...el, src, photo: undefined };\n          }\n          return el;\n        });\n      });\n    };\n\n    img.src = objectUrl;\n  }, []);\n\n  const [, drop] = useDrop({\n    accept: \"Photo\",\n    hover(item) {\n      if (!imageContRef.current) return;\n\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      if (dragIndex == hoverIndex) return;\n\n      moveImage(dragIndex, hoverIndex);\n\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: \"Photo\",\n    id: photo.id,\n    index,\n    item: {\n      type: \"Photo\",\n      id: photo.id,\n      index,\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  drag(drop(imageContRef));\n\n  const remove = () => {\n    setPhotos((prev) => prev.filter((el) => el.id !== photo.id));\n  };\n\n  return (\n    <div\n      style={{ opacity: isDragging ? 0 : 1 }}\n      className=\"photo\"\n      ref={imageContRef}\n    >\n      <img ref={imageRef} />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className=\"remove\"\n        onClick={remove}\n      >\n        <CancelIcon></CancelIcon>\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Photo from \"./Photo\";\nimport update from \"immutability-helper\";\n\nexport default function PhotosDisplay({ photos, setPhotos }) {\n  // console.log(photos);\n\n  const moveImage = (dragIndex, hoverIndex) => {\n    const draggedImage = photos[dragIndex];\n    console.log(\"dragged Image\", dragIndex, hoverIndex, draggedImage);\n\n    setPhotos(\n      update(photos, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, draggedImage],\n        ],\n      })\n    );\n  };\n\n  return (\n    <>\n      <div className=\"photos\">\n        {photos.map((photo, index) => (\n          <Photo\n            key={photo.id}\n            photo={photo}\n            moveImage={moveImage}\n            index={index}\n            setPhotos={setPhotos}\n          ></Photo>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { MenuItem, Select, InputLabel } from \"@material-ui/core\";\nimport { useState } from \"react\";\n\nexport default function Sorter({ setPhotos }) {\n  const [sorting, setSorting] = useState(\"0\");\n\n  const select = (e) => {\n    const new_sorting = e.target.value;\n    setSorting(new_sorting);\n    setPhotos((prev) => {\n      return [...prev].sort((a, b) => {\n        if (new_sorting == \"1\") {\n          return a.lastModified - b.lastModified;\n        } else if (new_sorting == \"2\") {\n          return b.lastModified - a.lastModified;\n        } else if (new_sorting == \"3\") {\n          return a.name.localeCompare(b.name);\n        } else if (new_sorting == \"4\") {\n          return b.name.localeCompare(a.name);\n        }\n        return a;\n      });\n    });\n  };\n\n  return (\n    <>\n      <InputLabel id=\"label\">Sorting</InputLabel>\n      <Select labelId=\"label\" id=\"select\" value={sorting} onChange={select}>\n        <MenuItem value=\"0\">Custom</MenuItem>\n        <MenuItem value=\"1\">Oldest first</MenuItem>\n        <MenuItem value=\"2\">Newest first</MenuItem>\n        <MenuItem value=\"3\">A-Z</MenuItem>\n        <MenuItem value=\"4\">Z-A</MenuItem>\n      </Select>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport Uploader from \"./Uploader\";\nimport Merger from \"./Merger\";\nimport PhotosDisplay from \"./PhotosDisplay\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Sorter from \"./Sorter\";\n\nconst HTML5Backend = require(\"react-dnd-html5-backend\").HTML5Backend;\nconst DndProvider = require(\"react-dnd\").DndProvider;\n\nexport default function App() {\n  const [photos, setPhotos] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    console.log(photos);\n  }, [photos]);\n\n  let progressBar = \"\";\n  if (progress > 0)\n    progressBar = <LinearProgress variant=\"determinate\" value={progress} />;\n\n  return (\n    <>\n      {progressBar}\n      <br />\n      <Sorter setPhotos={setPhotos}></Sorter>\n      <DndProvider backend={HTML5Backend}>\n        <PhotosDisplay setPhotos={setPhotos} photos={photos}></PhotosDisplay>\n      </DndProvider>\n\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"contained primary button group\"\n      >\n        <Uploader setPhotos={setPhotos}></Uploader>\n        <Merger photos={photos} setProgress={setProgress}></Merger>\n      </ButtonGroup>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}